yname = "logy", first_stage = ~ 0 | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
fixest::iplot(es, main = "Event study: Staggered treatment", xlab = "Relative time to treatment", col = "steelblue", ref.line = -0.5)
# Compare to the original event study plot (dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=-20, y=3, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=-20, y=3, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
# Compare to the original event study plot (dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=-10, y=.3, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
# Compare to the original event study plot (dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=10, y=.3, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
# Compare to the original event study plot (dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=5, y=.35, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
# Compare to the original event study plot (dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=5.5, y=.45, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
View(es)
summary(es)
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)
# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata$date <- as.yearmon(mydata$date)
# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata <- mydata %>% filter(location  %!in% c("American Samoa", "Bureau of Prisons", "Dept of Defense",
"Federated States of Micronesia", "Guam", "Indian Health Svc",
"Long Term Care", "Marshall Islands", "Northern Mariana Islands",
"Puerto Rico", "Republic of Palau", "United States", "Veterans Health",
"Virgin Islands"))
# Identify all treated states for our TWFE regression
regdata_dte <- mydata %>% mutate(treatdate = ifelse(location %in% c("Ohio", "New York State", "Maryland"), 2021.417,
ifelse(location %in% c("Massachusetts", "Michigan"), 2021.583,NA)), # Note the treatment date doesn't matter for non-treated states
reltime = round((as.numeric(date) - treatdate)*12))
regdata_dte <- regdata_dte %>% mutate(state = ifelse(location %in% c("Ohio", "New York State", "Maryland", "Massachusetts", "Michigan"), 1, 0),
logy = log(monthly_vaccinations_per_million+1))
dte <- feols(logy ~ i(reltime, state, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2)) # How do we interpret this?
View(dte)
summary(dte)
dte <- feols(logy ~ i(reltime, ref = -1) |
date + location, data = regdata_dte)
View(regdata_dte)
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)
# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata <- mydata %>% filter(location  %!in% c("American Samoa", "Bureau of Prisons", "Dept of Defense",
"Federated States of Micronesia", "Guam", "Indian Health Svc",
"Long Term Care", "Marshall Islands", "Northern Mariana Islands",
"Puerto Rico", "Republic of Palau", "United States", "Veterans Health",
"Virgin Islands"))
# Group to month level
mydata <- mydata %>% group_by(date, location) %>%
summarize(total_vaccinations_per_hundred = sum(total_vaccinations_per_hundred,na.rm=T),
people_vaccinated_per_hundred = sum(people_vaccinated_per_hundred,na.rm=T),
monthly_vaccinations_per_million = sum(daily_vaccinations_per_million,na.rm=T))
# Identify all treated states for our TWFE regression
regdata_dte <- mydata %>% mutate(treatdate = ifelse(location %in% c("Ohio", "New York State", "Maryland"), 2021.417,
ifelse(location %in% c("Massachusetts", "Michigan"), 2021.583,NA)), # Note the treatment date doesn't matter for non-treated states
reltime = round((as.numeric(date) - treatdate)*12))
regdata_dte <- regdata_dte %>% mutate(state = ifelse(location %in% c("Ohio", "New York State", "Maryland", "Massachusetts", "Michigan"), 1, 0),
logy = log(monthly_vaccinations_per_million+1))
# Make sure to reassign "treated" states
dte <- feols(logy ~ i(reltime, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2)) # How do we interpret this?
summary(dte)
regdata_dte <- regdata_dte %>% ungroup()%>% mutate(treated = ifelse(reltime >= 0,1,0))
regdata_dte <- regdata_dte %>% mutate(treated = ifelse(is.na(treated),0,treated))
regdata_dte <- regdata_dte %>% mutate(stateid = as.numeric(as.factor(location)),
dateid=as.numeric(as.factor(date))) # Need a state id variable as a number, not string
# Need a variable for first period of treatment (see below)
# Note: there has to be a cleaner way to make this work, but I haven't found it yet.
regdata_dte <- regdata_dte %>%
mutate(firsttreat = ifelse(treated==1,dateid,NA)) %>%
group_by(stateid) %>%
mutate(firsttreat = min(firsttreat,na.rm=T)) %>% # first period where observation is treated
mutate(firsttreat = ifelse(is.infinite(firsttreat),0,firsttreat)) # want untreated units to have a 0
regdata_dte <- regdata_dte %>% mutate(reltime = ifelse(is.na(reltime),Inf,reltime))
regdata_dte <- regdata_dte %>% filter(abs(reltime) <= 8) # Can't have a lot of excess leads/lags
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
fixest::iplot(es, main = "Event study: Staggered treatment", xlab = "Relative time to treatment", col = "steelblue", ref.line = -0.5)
################################################################################
# I like to include several additional notes in the header of my files here:
#
# Last modified: 8/17/2022
#
### PURPOSE:
# Lecture 11 code and output file
#
### NOTES:
# - uses the Tidyverse package and Dplyr
################################################################################
### 0. Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom)
library(readxl) # Read in data
library(modelsummary) # For making regression tables
library(causaldata) # Useful toy data sets
library(here) # Helpful in working with directories and projects
library(AER) # this package has lots of applied metrics packages
library(foreign) # Helpful for reading in data from Stata or other code languages
library(gghighlight) # For figures
library(lubridate) # For figures
library(stargazer) # For tables
# TWFE Packages
library(fixest)
library(TwoWayFEWeights)
library(bacondecomp)
library(DIDmultiplegt)
library(did)
library(did2s)
set.seed(03262020)
# Setting the seed helps to make random number generators give us the same numbers across machines
################################################################################
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)
# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata <- mydata %>% filter(location  %!in% c("American Samoa", "Bureau of Prisons", "Dept of Defense",
"Federated States of Micronesia", "Guam", "Indian Health Svc",
"Long Term Care", "Marshall Islands", "Northern Mariana Islands",
"Puerto Rico", "Republic of Palau", "United States", "Veterans Health",
"Virgin Islands"))
# Group to month level
mydata <- mydata %>% group_by(date, location) %>%
summarize(total_vaccinations_per_hundred = sum(total_vaccinations_per_hundred,na.rm=T),
people_vaccinated_per_hundred = sum(people_vaccinated_per_hundred,na.rm=T),
monthly_vaccinations_per_million = sum(daily_vaccinations_per_million,na.rm=T))
# Identify all treated states for our TWFE regression
regdata_dte <- mydata %>% mutate(treatdate = ifelse(location %in% c("Ohio", "New York State", "Maryland"), 2021.417,
ifelse(location %in% c("Massachusetts", "Michigan"), 2021.583,NA)), # Note the treatment date doesn't matter for non-treated states
reltime = round((as.numeric(date) - treatdate)*12))
regdata_dte <- regdata_dte %>% mutate(state = ifelse(location %in% c("Ohio", "New York State", "Maryland", "Massachusetts", "Michigan"), 1, 0),
logy = log(monthly_vaccinations_per_million+1))
# Make sure to reassign "treated" states
dte <- feols(logy ~ i(reltime, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2)) # How do we interpret this?
regdata_dte <- regdata_dte %>% ungroup()%>% mutate(treated = ifelse(reltime >= 0,1,0))
regdata_dte <- regdata_dte %>% mutate(treated = ifelse(is.na(treated),0,treated))
regdata_dte <- regdata_dte %>% mutate(stateid = as.numeric(as.factor(location)),
dateid=as.numeric(as.factor(date))) # Need a state id variable as a number, not string
# Need a variable for first period of treatment (see below)
# Note: there has to be a cleaner way to make this work, but I haven't found it yet.
regdata_dte <- regdata_dte %>%
mutate(firsttreat = ifelse(treated==1,dateid,NA)) %>%
group_by(stateid) %>%
mutate(firsttreat = min(firsttreat,na.rm=T)) %>% # first period where observation is treated
mutate(firsttreat = ifelse(is.infinite(firsttreat),0,firsttreat)) # want untreated units to have a 0
regdata_dte <- regdata_dte %>% mutate(reltime = ifelse(is.na(reltime),Inf,reltime))
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
fixest::iplot(es, main = "Event study: Staggered treatment", xlab = "Relative time to treatment", col = "steelblue", ref.line = -0.5)
rm(es)
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
row.names(regdata_dte)
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ 0 | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
factor(regdata_dte$reltime)
regdata_dte <- regdata_dte %>% filter(abs(reltime) <= 10) # Can't have a lot of excess leads/lags
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
fixest::iplot(es, main = "Event study: Staggered treatment", xlab = "Relative time to treatment", col = "steelblue", ref.line = -0.5)
# Compare to the original event study plot (dte)
dte <- feols(logy ~ i(reltime, ref = c(-1, Inf)) |
date + location, data = regdata_dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=5.5, y=.45, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=4.5, y=.55, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
?event_study
# Note: this comes from the did2s package again
out = event_study(
data = regdata_dte,
yname = "logy",
idname = "stateid",
tname = "dateid",
gname = "firsttreat", # Unit specific date of initial treatment
estimator = "all" # Can ask for some of c("all", "TWFE", "did2s", "did", "impute", "sunab", "staggered")
)
regdata_dte$firsttreat
View(regdata_dte)
################################################################################
# I like to include several additional notes in the header of my files here:
#
# Last modified: 8/17/2022
#
### PURPOSE:
# Lecture 11 code and output file
#
### NOTES:
# - uses the Tidyverse package and Dplyr
################################################################################
### 0. Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom)
library(readxl) # Read in data
library(modelsummary) # For making regression tables
library(causaldata) # Useful toy data sets
library(here) # Helpful in working with directories and projects
library(AER) # this package has lots of applied metrics packages
library(foreign) # Helpful for reading in data from Stata or other code languages
library(gghighlight) # For figures
library(lubridate) # For figures
library(stargazer) # For tables
# TWFE Packages
library(fixest)
library(TwoWayFEWeights)
library(bacondecomp)
library(DIDmultiplegt)
library(did)
library(did2s)
set.seed(03262020)
# Setting the seed helps to make random number generators give us the same numbers across machines
################################################################################
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)
# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata <- mydata %>% filter(location  %!in% c("American Samoa", "Bureau of Prisons", "Dept of Defense",
"Federated States of Micronesia", "Guam", "Indian Health Svc",
"Long Term Care", "Marshall Islands", "Northern Mariana Islands",
"Puerto Rico", "Republic of Palau", "United States", "Veterans Health",
"Virgin Islands"))
# Group to month level
mydata <- mydata %>% group_by(date, location) %>%
summarize(total_vaccinations_per_hundred = sum(total_vaccinations_per_hundred,na.rm=T),
people_vaccinated_per_hundred = sum(people_vaccinated_per_hundred,na.rm=T),
monthly_vaccinations_per_million = sum(daily_vaccinations_per_million,na.rm=T))
# Identify all treated states for our TWFE regression
regdata_dte <- mydata %>% mutate(treatdate = ifelse(location %in% c("Ohio", "New York State", "Maryland"), 2021.417,
ifelse(location %in% c("Massachusetts", "Michigan"), 2021.583,NA)), # Note the treatment date doesn't matter for non-treated states
reltime = round((as.numeric(date) - treatdate)*12))
regdata_dte <- regdata_dte %>% mutate(state = ifelse(location %in% c("Ohio", "New York State", "Maryland", "Massachusetts", "Michigan"), 1, 0),
logy = log(monthly_vaccinations_per_million+1))
# Make sure to reassign "treated" states
dte <- feols(logy ~ i(reltime, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2)) # How do we interpret this?
regdata_dte <- regdata_dte %>% ungroup()%>% mutate(treated = ifelse(reltime >= 0,1,0))
regdata_dte <- regdata_dte %>% mutate(treated = ifelse(is.na(treated),0,treated))
regdata_dte <- regdata_dte %>% mutate(stateid = as.numeric(as.factor(location)),
dateid=as.numeric(as.factor(date))) # Need a state id variable as a number, not string
regdata$treated
regdata_dte$reltime
# Need a variable for first period of treatment (see below)
# Note: there has to be a cleaner way to make this work, but I haven't found it yet.
regdata_dte <- regdata_dte %>%
mutate(firsttreat = ifelse(treated==1,dateid,NA)) %>%
group_by(stateid) %>%
mutate(firsttreat = min(firsttreat,na.rm=T)) %>% # first period where observation is treated
mutate(firsttreat = ifelse(is.infinite(firsttreat),0,firsttreat)) # want untreated units to have a 0
regdata_dte$firsttreat
regdata_dte <- regdata_dte %>% mutate(reltime = ifelse(is.na(reltime),Inf,reltime))
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
regdata_dte <- regdata_dte %>% mutate(reltime = ifelse(is.infinite(reltime),NA,reltime))
regdata_dte$reltime
regdata_dte <- regdata_dte %>% filter(abs(reltime) <= 10)
regdata_dte$reltime
View(regdata_dte)
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)
# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata <- mydata %>% filter(location  %!in% c("American Samoa", "Bureau of Prisons", "Dept of Defense",
"Federated States of Micronesia", "Guam", "Indian Health Svc",
"Long Term Care", "Marshall Islands", "Northern Mariana Islands",
"Puerto Rico", "Republic of Palau", "United States", "Veterans Health",
"Virgin Islands"))
# Group to month level
mydata <- mydata %>% group_by(date, location) %>%
summarize(total_vaccinations_per_hundred = sum(total_vaccinations_per_hundred,na.rm=T),
people_vaccinated_per_hundred = sum(people_vaccinated_per_hundred,na.rm=T),
monthly_vaccinations_per_million = sum(daily_vaccinations_per_million,na.rm=T))
# Identify all treated states for our TWFE regression
regdata_dte <- mydata %>% mutate(treatdate = ifelse(location %in% c("Ohio", "New York State", "Maryland"), 2021.417,
ifelse(location %in% c("Massachusetts", "Michigan"), 2021.583,NA)), # Note the treatment date doesn't matter for non-treated states
reltime = round((as.numeric(date) - treatdate)*12))
regdata_dte <- regdata_dte %>% mutate(state = ifelse(location %in% c("Ohio", "New York State", "Maryland", "Massachusetts", "Michigan"), 1, 0),
logy = log(monthly_vaccinations_per_million+1))
# Make sure to reassign "treated" states
dte <- feols(logy ~ i(reltime, ref = -1) |
date + location, data = regdata_dte)
# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2,
ref.line.par=list(col="red",lty=1,lwd=2)) # How do we interpret this?
regdata_dte <- regdata_dte %>% ungroup()%>% mutate(treated = ifelse(reltime >= 0,1,0))
regdata_dte <- regdata_dte %>% mutate(treated = ifelse(is.na(treated),0,treated))
regdata_dte <- regdata_dte %>% mutate(stateid = as.numeric(as.factor(location)),
dateid=as.numeric(as.factor(date))) # Need a state id variable as a number, not string
# Need a variable for first period of treatment (see below)
# Note: there has to be a cleaner way to make this work, but I haven't found it yet.
regdata_dte <- regdata_dte %>%
mutate(firsttreat = ifelse(treated==1,dateid,NA)) %>%
group_by(stateid) %>%
mutate(firsttreat = min(firsttreat,na.rm=T)) %>% # first period where observation is treated
mutate(firsttreat = ifelse(is.infinite(firsttreat),0,firsttreat)) # want untreated units to have a 0
regdata_dte2 <- regdata_dte %>% filter(abs(reltime) <= 10)
regdata_dte2 <- regdata_dte %>% filter(reltime <= 10)
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
regdata_dte2 <- regdata_dte %>% mutate(reltime = ifelse(is.na(reltime),Inf,reltime))
es <- did2s(data=regdata_dte2,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | date + location,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
es <- did2s(data=regdata_dte2,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
es <- did2s(data=regdata_dte2,
yname = "logy", first_stage = ~ 0 | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "stateid")
# Note: this comes from the did2s package again
out = event_study(
data = regdata_dte,
yname = "logy",
idname = "stateid",
tname = "dateid",
gname = "firsttreat", # Unit specific date of initial treatment
estimator = "all" # Can ask for some of c("all", "TWFE", "did2s", "did", "impute", "sunab", "staggered")
)
plot_event_study(out)
es <- did2s(data=regdata_dte2,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1, Inf)), treatment = "treated",
cluster_var = "dateid")
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1)), treatment = "treated",
cluster_var = "dateid")
regdata_dte <- regdata_dte %>% mutate(reltime = ifelse(is.na(reltime),Inf,reltime))
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1)), treatment = "treated",
cluster_var = "dateid")
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1,Inf)), treatment = "treated",
cluster_var = "dateid")
regdata_dte <- regdata_dte %>% filter(reltime %notin% c(11,12,13))
regdata_dte <- regdata_dte %>% filter(reltime %!in% c(11,12,13))
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1,Inf)), treatment = "treated",
cluster_var = "dateid")
levels(regdata_dte$reltime)
levels(factor(regdata_dte$reltime)
)
feols(logy ~ total_vaccinations_per_hundred | stateid + dateid, data=regdata_dte)
feols(logy ~ i(reltime,ref=c(-1,Inf)) + total_vaccinations_per_hundred | stateid + dateid, data=regdata_dte)
?feols
regdata_dte <- regdata_dte %>% mutate(reltime = factor(reltime))
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1,Inf)), treatment = "treated",
cluster_var = "dateid")
fixest::iplot(es, main = "Event study: Staggered treatment", xlab = "Relative time to treatment", col = "steelblue", ref.line = -0.5)
# Compare to the original event study plot (dte)
dte <- feols(logy ~ i(reltime, ref = c(-1, Inf)) |
date + location, data = regdata_dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=4.5, y=.55, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
levels(regdata_dte$reltime)
?factor
regdata_dte <- regdata_dte %>% mutate(reltime = factor(reltime,
levels=c(-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,Inf)))
es <- did2s(data=regdata_dte,
yname = "logy", first_stage = ~ total_vaccinations_per_hundred | stateid + dateid,
second_stage = ~i(reltime,ref=c(-1,Inf)), treatment = "treated",
cluster_var = "dateid")
fixest::iplot(es, main = "Event study: Staggered treatment", xlab = "Relative time to treatment", col = "steelblue", ref.line = -0.5)
dte <- feols(logy ~ i(reltime, ref = c(-1, Inf)) |
date + location, data = regdata_dte)
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=4.5, y=.55, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=7, y=-.55, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=10, y=-.55, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
fixest::iplot(list(es, dte), sep = 0.2, ref.line = -0.5,
col = c("steelblue", "#82b446"), pt.pch = c(20, 18),
xlab = "Relative time to treatment",
main = "Event study: Staggered treatment (comparison)")
# Legend
legend(x=12, y=-.45, col = c("steelblue", "#82b446"), pch = c(20, 18),
legend = c("Two-stage estimate", "TWFE"))
out = event_study(
data = regdata_dte,
yname = "logy",
idname = "stateid",
tname = "dateid",
gname = "firsttreat", # Unit specific date of initial treatment
estimator = "all" # Can ask for some of c("all", "TWFE", "did2s", "did", "impute", "sunab", "staggered")
)
plot_event_study(out)
summary(out)
out$estimate
hist(out$estimate)
