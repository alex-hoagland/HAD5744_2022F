---
title: "Lecture 11 Code"
author: "Alex Hoagland"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r preliminaries}
################################################################################
# I like to include several additional notes in the header of my files here:
#
# Last modified: 8/17/2022
#
### PURPOSE:
  # Lecture 11 code and output file
# 
### NOTES:
  # - uses the Tidyverse package and Dplyr
################################################################################


### 0. Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom)
library(readxl) # Read in data
library(modelsummary) # For making regression tables
library(causaldata) # Useful toy data sets
library(here) # Helpful in working with directories and projects
library(AER) # this package has lots of applied metrics packages
library(foreign) # Helpful for reading in data from Stata or other code languages 
library(gghighlight) # For figures 
library(lubridate) # For figures
library(stargazer) # For tables

set.seed(03262020) 
  # Setting the seed helps to make random number generators give us the same numbers across machines
################################################################################
```

## Preliminaries
Let's set up the same data we used in Lecture 9, on the effectiveness of vaccine lotteries on COVID-19 vaccination rates across the United States. The code below organizes the data and produces the same naive TWFE regression specification we discussed there. 

```{r twfe-naive}
mydata <- read.csv(here("us_state_vaccinations.csv"))
mydata$date <- as.yearmon(mydata$date)

# Trim out some "states" that we don't need
`%!in%` <- Negate(`%in%`)
mydata <- mydata %>% filter(location  %!in% c("American Samoa", "Bureau of Prisons", "Dept of Defense",
                                             "Federated States of Micronesia", "Guam", "Indian Health Svc",
                                             "Long Term Care", "Marshall Islands", "Northern Mariana Islands",
                                             "Puerto Rico", "Republic of Palau", "United States", "Veterans Health",
                                             "Virgin Islands"))

# Group to month level
mydata <- mydata %>% group_by(date, location) %>% 
  summarize(total_vaccinations_per_hundred = sum(total_vaccinations_per_hundred,na.rm=T),
            people_vaccinated_per_hundred = sum(people_vaccinated_per_hundred,na.rm=T),
            monthly_vaccinations_per_million = sum(daily_vaccinations_per_million,na.rm=T))

# Identify all treated states for our TWFE regression
regdata_dte <- mydata %>% mutate(treatdate = ifelse(location %in% c("Ohio", "New York State", "Maryland"), 2021.417,
                                                     ifelse(location %in% c("Massachusetts", "Michigan"), 2021.583,NA)), # Note the treatment date doesn't matter for non-treated states
                                 reltime = round((as.numeric(date) - treatdate)*12)) 
regdata_dte <- regdata_dte %>% mutate(state = ifelse(location %in% c("Ohio", "New York State", "Maryland", "Massachusetts", "Michigan"), 1, 0),
                                      logy = log(monthly_vaccinations_per_million+1))
  # Make sure to reassign "treated" states

dte <- feols(logy ~ i(reltime, state, ref = -1) | 
               date + location, data = regdata_dte)

# And use coefplot() for a graph of effects
iplot(dte,ref.line=-0.2, 
      ref.line.par=list(col="red",lty=1,lwd=2)) # How do we interpret this? 
```

## Diagnosing Negative Weights

We want to know to what extent negative weights are an issue in our data. To do this, there are two packages we can use. First, we can use `TwoWayFEWeights`:

```{r twfe-diagnostics-1}
regdata_dte <- regdata_dte %>% ungroup()%>% mutate(treated = ifelse(reltime >= 0,1,0))
twowayfeweights(df=regdata_dte, # Dataframe
                Y="logy", # Dep var
                G="location", # group identifier
                T="date", # Date var
                D="treated", # Whether state was treated
                cmd_type="feTR") # type of estimation to perform -- most commonly feTR
weighttable <- twowayfeweights(df=regdata_dte, # Dataframe
                               Y="logy", # Dep var
                               G="location", # group identifier
                               T="date", # Date var
                               D="treated", # Whether state was treated
                               cmd_type="feTR") # type of estimation to perform -- most commonly feTR
  # lots of negative weighting here!
```

### Goodman-Bacon Decomposition

The Goodman-Bacon decomposition can be implemented using `bacondecomp`:

```{r twfe-diagnostics-2}
regdata_dte <- regdata_dte %>% mutate(treated = ifelse(is.na(treated),0,treated))
regdata_dte <- regdata_dte %>% mutate(stateid = as.numeric(as.factor(location)),
                                      dateid=as.numeric(as.factor(date))) # Need a state id variable as a number, not string
bacon(formula = logy ~ treated, 
      data=regdata_dte,
      id_var="stateid",
      time_var="dateid",
      quietly=F)
```

## Alternative Estimators

### Suppressing Dynamics: 

If we are willing to assume no dynamic treatment effects, we can correct for contamination using the estimator of 

### Callaway and Sant'Anna (2021): `csdid`

### Borusyak et al. 

## All Alternatives at Once

## Wooldridge